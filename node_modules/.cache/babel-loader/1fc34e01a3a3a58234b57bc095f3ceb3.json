{"ast":null,"code":"var _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport { useQuery } from \"react-query\";\nexport const useRockets = () => {\n  _s();\n\n  return useQuery({\n    queryKey: \"users\",\n    queryFn: getUsers\n  });\n};\n\n_s(useRockets, \"4ZpngI1uv+Uo3WQHEZmTQ5FNM+k=\", false, function () {\n  return [useQuery];\n});\n\nexport const Rocketdetail = () => {\n  _s2();\n\n  return useQuery({\n    queryKey: \"rockets\",\n    queryFn: getRocket\n  });\n};\n\n_s2(Rocketdetail, \"4ZpngI1uv+Uo3WQHEZmTQ5FNM+k=\", false, function () {\n  return [useQuery];\n});\n\n_c = Rocketdetail;\n\nconst getUsers = async () => {\n  const url = \"https://api.spacex.land/graphql\";\n  const response = await fetch(url, {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify({\n      query: `\n        query Users {\n          users {\n            name\n            rocket\n            timestamp\n            twitter\n          }\n        }\n      `\n    })\n  });\n  const responseJson = await response.json();\n  return responseJson.data.rockets;\n};\n\nconst getRocket = async () => {\n  const url = \"https://api.spacex.land/graphql\";\n  const response = await fetch(url, {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify({\n      query: `\n          query Rockets {\n            rocket(id:\"falcon1\") {\n                id\n                active\n                company\n                cost_per_launch\n                country\n                description\n                wikipedia\n            }\n          }\n        `\n    })\n  });\n  const responseJson = await response.json();\n  console.log(responseJson.data.rocket);\n  return responseJson.data.rocket;\n};\n\nvar _c;\n\n$RefreshReg$(_c, \"Rocketdetail\");","map":{"version":3,"names":["useQuery","useRockets","queryKey","queryFn","getUsers","Rocketdetail","getRocket","url","response","fetch","method","headers","body","JSON","stringify","query","responseJson","json","data","rockets","console","log","rocket"],"sources":["/home/pflegecreme123/Desktop/typescript/React Graph ql/react-space-port/space-port-repo/space-port/src/common/hooks/useRocketsdetail.tsx"],"sourcesContent":["import { useQuery } from \"react-query\";\n\nexport const useRockets = () => {\n  return useQuery({\n    queryKey: \"users\",\n    queryFn: getUsers,\n  });\n};\n\nexport const Rocketdetail = () => {\n  return useQuery({\n    queryKey: \"rockets\",\n    queryFn: getRocket,\n  });\n};\n\nconst getUsers = async () => {\n  const url = \"https://api.spacex.land/graphql\";\n  const response = await fetch(url, {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n    body: JSON.stringify({\n      query: `\n        query Users {\n          users {\n            name\n            rocket\n            timestamp\n            twitter\n          }\n        }\n      `,\n    }),\n  });\n\n  const responseJson = await response.json();\n  return responseJson.data.rockets;\n};\n\nconst getRocket = async () => {\n  const url = \"https://api.spacex.land/graphql\";\n  const response = await fetch(url, {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n    body: JSON.stringify({\n      query: `\n          query Rockets {\n            rocket(id:\"falcon1\") {\n                id\n                active\n                company\n                cost_per_launch\n                country\n                description\n                wikipedia\n            }\n          }\n        `,\n    }),\n  });\n  const responseJson = await response.json();\n  console.log(responseJson.data.rocket);\n  return responseJson.data.rocket;\n};\n"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,aAAzB;AAEA,OAAO,MAAMC,UAAU,GAAG,MAAM;EAAA;;EAC9B,OAAOD,QAAQ,CAAC;IACdE,QAAQ,EAAE,OADI;IAEdC,OAAO,EAAEC;EAFK,CAAD,CAAf;AAID,CALM;;GAAMH,U;UACJD,Q;;;AAMT,OAAO,MAAMK,YAAY,GAAG,MAAM;EAAA;;EAChC,OAAOL,QAAQ,CAAC;IACdE,QAAQ,EAAE,SADI;IAEdC,OAAO,EAAEG;EAFK,CAAD,CAAf;AAID,CALM;;IAAMD,Y;UACJL,Q;;;KADIK,Y;;AAOb,MAAMD,QAAQ,GAAG,YAAY;EAC3B,MAAMG,GAAG,GAAG,iCAAZ;EACA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACF,GAAD,EAAM;IAChCG,MAAM,EAAE,MADwB;IAEhCC,OAAO,EAAE;MACP,gBAAgB;IADT,CAFuB;IAKhCC,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;MACnBC,KAAK,EAAG;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;IAVyB,CAAf;EAL0B,CAAN,CAA5B;EAmBA,MAAMC,YAAY,GAAG,MAAMR,QAAQ,CAACS,IAAT,EAA3B;EACA,OAAOD,YAAY,CAACE,IAAb,CAAkBC,OAAzB;AACD,CAvBD;;AAyBA,MAAMb,SAAS,GAAG,YAAY;EAC5B,MAAMC,GAAG,GAAG,iCAAZ;EACA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACF,GAAD,EAAM;IAChCG,MAAM,EAAE,MADwB;IAEhCC,OAAO,EAAE;MACP,gBAAgB;IADT,CAFuB;IAKhCC,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;MACnBC,KAAK,EAAG;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;IAbyB,CAAf;EAL0B,CAAN,CAA5B;EAqBA,MAAMC,YAAY,GAAG,MAAMR,QAAQ,CAACS,IAAT,EAA3B;EACAG,OAAO,CAACC,GAAR,CAAYL,YAAY,CAACE,IAAb,CAAkBI,MAA9B;EACA,OAAON,YAAY,CAACE,IAAb,CAAkBI,MAAzB;AACD,CA1BD"},"metadata":{},"sourceType":"module"}